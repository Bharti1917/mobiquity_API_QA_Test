{"name":"verifyIftheStatusCodeIsNot200","id":"com.api.testing.junit.usersdetails.GetUsersTest:verifyIftheStatusCodeIsNot200","testCaseName":"com.api.testing.junit.usersdetails.GetUsersTest","testSteps":[{"number":1,"description":"This will validate the response code  500 of get users API ","duration":1037,"startTime":"2021-01-07T11:03:06.116016500+01:00[Europe/Berlin]","exception":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nExpected status code \u003c500\u003e but was \u003c200\u003e.\n","stackTrace":[{"classLoaderName":"app","declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":656,"format":1},{"classLoaderName":"app","declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":125,"format":1},{"classLoaderName":"app","declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":133,"format":1},{"classLoaderName":"app","declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"statusCode","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":119,"format":1},{"classLoaderName":"app","declaringClass":"com.api.testing.junit.usersdetails.GetUsersTest","methodName":"verifyIftheStatusCodeIsNot200","fileName":"GetUsersTest.java","lineNumber":58,"format":1}]},"result":"FAILURE","precondition":false,"level":0,"children":[{"number":2,"description":"GET https://jsonplaceholder.typicode.com/users?username\u003dDelphine\r","duration":0,"startTime":"2021-01-07T11:03:02.044942500+01:00[Europe/Berlin]","result":"SUCCESS","restQuery":{"method":"GET","path":"https://jsonplaceholder.typicode.com/users?username\u003dDelphine\r","content":"\r","contentType":"null","requestHeaders":"Accept\u003d*/*\r","requestCookies":"\r","responseHeaders":"Date: Thu, 07 Jan 2021 10:03:02 GMT\r\nContent-Type: application/json; charset\u003dutf-8\r\nTransfer-Encoding: chunked\r\nConnection: keep-alive\r\nSet-Cookie: __cfduid\u003dd0a77d806971b92490fded589fc4c73291610013782; expires\u003dSat, 06-Feb-21 10:03:02 GMT; path\u003d/; domain\u003d.typicode.com; HttpOnly; SameSite\u003dLax\r\nX-Powered-By: Express\r\nX-Ratelimit-Limit: 1000\r\nX-Ratelimit-Remaining: 999\r\nX-Ratelimit-Reset: 1609862279\r\nVary: Origin, Accept-Encoding\r\nAccess-Control-Allow-Credentials: true\r\nCache-Control: max-age\u003d43200\r\nPragma: no-cache\r\nExpires: -1\r\nX-Content-Type-Options: nosniff\r\nEtag: W/\"23d-EKDCRFg7oh6G4KjjoWlynBpL2AY\"\r\nVia: 1.1 vegur\r\nCF-Cache-Status: HIT\r\nAge: 8052\r\ncf-request-id: 077de5cb0f0000dfd33c16e000000001\r\nExpect-CT: max-age\u003d604800, report-uri\u003d\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\r\nReport-To: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report?s\u003dlgFkFR69woR6H2Wj8O%2B8Q7nHTjwBcWpypfxFp6sZL%2F7VkaIH0gFE4cqD2s4z3eSG6YYtvoquOXGpZkNp%2B6kRLnSiee7MDn%2BV6deN%2FjoQypcABC%2FAtsjL0L%2Fb6M8D\"}],\"group\":\"cf-nel\",\"max_age\":604800}\r\nNEL: {\"report_to\":\"cf-nel\",\"max_age\":604800}\r\nServer: cloudflare\r\nCF-RAY: 60dcd8be7ca7dfd3-FRA\r\nContent-Encoding: gzip\r","responseCookies":"__cfduid\u003dd0a77d806971b92490fded589fc4c73291610013782;Path\u003d/;Domain\u003d.typicode.com;HttpOnly;Expires\u003d2/6/21, 10:03 AM\r","responseBody":"[\n    {\n        \"id\": 9,\n        \"name\": \"Glenna Reichert\",\n        \"username\": \"Delphine\",\n        \"email\": \"Chaim_McDermott@dana.io\",\n        \"address\": {\n            \"street\": \"Dayna Park\",\n            \"suite\": \"Suite 449\",\n            \"city\": \"Bartholomebury\",\n            \"zipcode\": \"76495-3109\",\n            \"geo\": {\n                \"lat\": \"24.6463\",\n                \"lng\": \"-168.8889\"\n            }\n        },\n        \"phone\": \"(775)976-6794 x41206\",\n        \"website\": \"conrad.com\",\n        \"company\": {\n            \"name\": \"Yost and Sons\",\n            \"catchPhrase\": \"Switchable contextually-based project\",\n            \"bs\": \"aggregate real-time technologies\"\n        }\n    }\n]","statusCode":200},"precondition":false,"level":1}]}],"userStory":{"id":"com.api.testing.junit.usersdetails.GetUsersTest","storyName":"Get users test","storyClassName":"com.api.testing.junit.usersdetails.GetUsersTest","path":"usersdetails","type":"story"},"featureTag":{"name":"Usersdetails/Get users test","type":"story","displayName":"Usersdetails/Get users test"},"title":"This will validate the response code  500 of get users API","tags":[{"name":"Usersdetails/Get users test","type":"story","displayName":"Get users test"},{"name":"SMOKE","type":"usersfeature","displayName":"SMOKE"},{"name":"NEGATIVE","type":"usersfeature","displayName":"NEGATIVE"},{"name":"Usersdetails","type":"feature","displayName":"Usersdetails"}],"startTime":"2021-01-07T11:03:05.403792300+01:00[Europe/Berlin]","duration":0,"isManualTestingUpToDate":false,"dataTable":{"headers":["USERNAME"],"rows":[{"values":["Delphine"],"lineNumber":0,"result":"SUCCESS"}],"predefinedRows":false,"dataSetDescriptors":[{"startRow":0,"rowCount":0}]},"manual":false,"result":"FAILURE"}